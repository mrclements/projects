{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zacha\\\\OneDrive\\\\Documents\\\\cline_workspace\\\\songsensei\\\\web\\\\src\\\\components\\\\WaveformViewer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Play, Pause, RotateCcw } from 'lucide-react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WaveformViewer = ({\n  jobId,\n  data,\n  onDataLoaded,\n  onTrimSelection,\n  isLoading\n}) => {\n  _s();\n  const waveformRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [selection, setSelection] = useState(null);\n  const [duration, setDuration] = useState(0);\n  useEffect(() => {\n    if (data && waveformRef.current) {\n      renderWaveform();\n    }\n  }, [data]);\n  useEffect(() => {\n    if (!jobId) return;\n    let intervalId;\n    intervalId = setInterval(async () => {\n      try {\n        const resp = await axios.get(`/api/analysis/status/${jobId}`);\n        const {\n          status,\n          waveform_data\n        } = resp.data;\n        if (status === 'completed' && waveform_data) {\n          onDataLoaded(waveform_data);\n          setDuration(waveform_data.duration);\n          clearInterval(intervalId);\n        }\n      } catch (err) {\n        console.error('Status polling error:', err);\n        clearInterval(intervalId);\n      }\n    }, 2000);\n    return () => clearInterval(intervalId);\n  }, [jobId, data, isLoading, onDataLoaded]);\n  const renderWaveform = () => {\n    if (!waveformRef.current || !data) return;\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    const container = waveformRef.current;\n    const width = container.clientWidth;\n    const height = 120;\n    canvas.width = width;\n    canvas.height = height;\n    canvas.className = 'w-full h-full cursor-pointer';\n\n    // Clear canvas\n    ctx.fillStyle = '#1f2937';\n    ctx.fillRect(0, 0, width, height);\n\n    // Draw waveform\n    const peaks = data.peaks;\n    const barWidth = width / peaks.length;\n    peaks.forEach((peak, i) => {\n      const barHeight = peak * height * 0.8;\n      const x = i * barWidth;\n      const y = (height - barHeight) / 2;\n      ctx.fillStyle = '#3b82f6';\n      ctx.fillRect(x, y, Math.max(1, barWidth - 1), barHeight);\n    });\n\n    // Draw selection overlay\n    if (selection) {\n      const startX = selection.start / data.duration * width;\n      const endX = selection.end / data.duration * width;\n      ctx.fillStyle = 'rgba(59, 130, 246, 0.3)';\n      ctx.fillRect(startX, 0, endX - startX, height);\n    }\n\n    // Replace existing canvas\n    container.innerHTML = '';\n    container.appendChild(canvas);\n\n    // Add click handler for selection\n    canvas.addEventListener('click', handleWaveformClick);\n  };\n  const handleWaveformClick = e => {\n    if (!data || !waveformRef.current) return;\n    const rect = waveformRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const clickTime = x / rect.width * data.duration;\n    if (!selection) {\n      // Start new selection\n      setSelection({\n        start: clickTime,\n        end: clickTime + 10\n      }); // Default 10 second selection\n    } else {\n      // Adjust selection\n      if (Math.abs(clickTime - selection.start) < Math.abs(clickTime - selection.end)) {\n        setSelection({\n          ...selection,\n          start: clickTime\n        });\n      } else {\n        setSelection({\n          ...selection,\n          end: clickTime\n        });\n      }\n    }\n  };\n  useEffect(() => {\n    if (selection) {\n      onTrimSelection(selection.start, selection.end);\n      renderWaveform(); // Re-render to show selection\n    }\n  }, [selection, onTrimSelection]);\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n  const resetSelection = () => {\n    setSelection(null);\n    renderWaveform();\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"waveform-container h-32 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-dots mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm\",\n          children: \"Extracting audio...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  }\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"waveform-container h-32 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-gray-400\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Waveform will appear here after audio extraction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"waveform-container h-32\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: waveformRef,\n        className: \"w-full h-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-outline\",\n          children: isPlaying ? /*#__PURE__*/_jsxDEV(Pause, {\n            className: \"h-4 w-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 26\n          }, this) : /*#__PURE__*/_jsxDEV(Play, {\n            className: \"h-4 w-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm text-gray-600\",\n          children: [formatTime(currentTime), \" / \", formatTime(duration)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-4\",\n        children: selection && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: [\"Selection: \", formatTime(selection.start), \" - \", formatTime(selection.end), \"(\", formatTime(selection.end - selection.start), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetSelection,\n            className: \"btn-outline\",\n            children: [/*#__PURE__*/_jsxDEV(RotateCcw, {\n              className: \"h-4 w-4 mr-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this), \"Reset\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-50 rounded-lg p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Instructions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), \" Click on the waveform to set the start point, then click again to set the end point for analysis. Select a segment of 10-30 seconds for best results.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n_s(WaveformViewer, \"Qsv4O98XSNzy5NTR6hIqQIXJq0w=\");\n_c = WaveformViewer;\nexport default WaveformViewer;\nvar _c;\n$RefreshReg$(_c, \"WaveformViewer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Play","Pause","RotateCcw","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","WaveformViewer","jobId","data","onDataLoaded","onTrimSelection","isLoading","_s","waveformRef","isPlaying","setIsPlaying","currentTime","setCurrentTime","selection","setSelection","duration","setDuration","current","renderWaveform","intervalId","setInterval","resp","get","status","waveform_data","clearInterval","err","console","error","canvas","document","createElement","ctx","getContext","container","width","clientWidth","height","className","fillStyle","fillRect","peaks","barWidth","length","forEach","peak","i","barHeight","x","y","Math","max","startX","start","endX","end","innerHTML","appendChild","addEventListener","handleWaveformClick","e","rect","getBoundingClientRect","clientX","left","clickTime","abs","formatTime","seconds","mins","floor","secs","toString","padStart","resetSelection","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","_c","$RefreshReg$"],"sources":["C:/Users/zacha/OneDrive/Documents/cline_workspace/songsensei/web/src/components/WaveformViewer.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { Play, Pause, RotateCcw } from 'lucide-react';\r\nimport axios from 'axios';\r\nimport { JobStatusResponse } from '../types/analysis';\r\n\r\ninterface WaveformViewerProps {\r\n  jobId: string | null;\r\n  data: any;\r\n  onDataLoaded: (data: any) => void;\r\n  onTrimSelection: (start: number, end: number) => void;\r\n  isLoading: boolean;\r\n}\r\n\r\nconst WaveformViewer: React.FC<WaveformViewerProps> = ({\r\n  jobId,\r\n  data,\r\n  onDataLoaded,\r\n  onTrimSelection,\r\n  isLoading\r\n}) => {\r\n  const waveformRef = useRef<HTMLDivElement>(null);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [selection, setSelection] = useState<{ start: number; end: number } | null>(null);\r\n  const [duration, setDuration] = useState(0);\r\n\r\n\r\n  useEffect(() => {\r\n    if (data && waveformRef.current) {\r\n      renderWaveform();\r\n    }\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    if (!jobId) return;\r\n    let intervalId: NodeJS.Timeout;\r\n    intervalId = setInterval(async () => {\r\n      try {\r\nconst resp = await axios.get<JobStatusResponse>(`/api/analysis/status/${jobId}`);\r\n        const { status, waveform_data } = resp.data;\r\n        if (status === 'completed' && waveform_data) {\r\n          onDataLoaded(waveform_data);\r\n          setDuration(waveform_data.duration);\r\n          clearInterval(intervalId);\r\n        }\r\n      } catch (err) {\r\n        console.error('Status polling error:', err);\r\n        clearInterval(intervalId);\r\n      }\r\n    }, 2000);\r\n    return () => clearInterval(intervalId);\r\n  }, [jobId, data, isLoading, onDataLoaded]);\r\n\r\n  const renderWaveform = () => {\r\n    if (!waveformRef.current || !data) return;\r\n\r\n    const canvas = document.createElement('canvas');\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx) return;\r\n\r\n    const container = waveformRef.current;\r\n    const width = container.clientWidth;\r\n    const height = 120;\r\n\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    canvas.className = 'w-full h-full cursor-pointer';\r\n\r\n    // Clear canvas\r\n    ctx.fillStyle = '#1f2937';\r\n    ctx.fillRect(0, 0, width, height);\r\n\r\n    // Draw waveform\r\n    const peaks = data.peaks;\r\n    const barWidth = width / peaks.length;\r\n\r\n    peaks.forEach((peak: number, i: number) => {\r\n      const barHeight = peak * height * 0.8;\r\n      const x = i * barWidth;\r\n      const y = (height - barHeight) / 2;\r\n\r\n      ctx.fillStyle = '#3b82f6';\r\n      ctx.fillRect(x, y, Math.max(1, barWidth - 1), barHeight);\r\n    });\r\n\r\n    // Draw selection overlay\r\n    if (selection) {\r\n      const startX = (selection.start / data.duration) * width;\r\n      const endX = (selection.end / data.duration) * width;\r\n      \r\n      ctx.fillStyle = 'rgba(59, 130, 246, 0.3)';\r\n      ctx.fillRect(startX, 0, endX - startX, height);\r\n    }\r\n\r\n    // Replace existing canvas\r\n    container.innerHTML = '';\r\n    container.appendChild(canvas);\r\n\r\n    // Add click handler for selection\r\n    canvas.addEventListener('click', handleWaveformClick);\r\n  };\r\n\r\n  const handleWaveformClick = (e: MouseEvent) => {\r\n    if (!data || !waveformRef.current) return;\r\n\r\n    const rect = waveformRef.current.getBoundingClientRect();\r\n    const x = e.clientX - rect.left;\r\n    const clickTime = (x / rect.width) * data.duration;\r\n\r\n    if (!selection) {\r\n      // Start new selection\r\n      setSelection({ start: clickTime, end: clickTime + 10 }); // Default 10 second selection\r\n    } else {\r\n      // Adjust selection\r\n      if (Math.abs(clickTime - selection.start) < Math.abs(clickTime - selection.end)) {\r\n        setSelection({ ...selection, start: clickTime });\r\n      } else {\r\n        setSelection({ ...selection, end: clickTime });\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selection) {\r\n      onTrimSelection(selection.start, selection.end);\r\n      renderWaveform(); // Re-render to show selection\r\n    }\r\n  }, [selection, onTrimSelection]);\r\n\r\n  const formatTime = (seconds: number): string => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = Math.floor(seconds % 60);\r\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const resetSelection = () => {\r\n    setSelection(null);\r\n    renderWaveform();\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"waveform-container h-32 flex items-center justify-center\">\r\n        <div className=\"text-center text-white\">\r\n          <div className=\"loading-dots mb-2\">\r\n            <div className=\"bg-white\"></div>\r\n            <div className=\"bg-white\"></div>\r\n            <div className=\"bg-white\"></div>\r\n          </div>\r\n          <p className=\"text-sm\">Extracting audio...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!data) {\r\n    return (\r\n      <div className=\"waveform-container h-32 flex items-center justify-center\">\r\n        <div className=\"text-center text-gray-400\">\r\n          <p>Waveform will appear here after audio extraction</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      {/* Waveform Display */}\r\n      <div className=\"waveform-container h-32\">\r\n        <div ref={waveformRef} className=\"w-full h-full\" />\r\n      </div>\r\n\r\n      {/* Controls */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center space-x-4\">\r\n          <button className=\"btn-outline\">\r\n            {isPlaying ? <Pause className=\"h-4 w-4\" /> : <Play className=\"h-4 w-4\" />}\r\n          </button>\r\n          <span className=\"text-sm text-gray-600\">\r\n            {formatTime(currentTime)} / {formatTime(duration)}\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"flex items-center space-x-4\">\r\n          {selection && (\r\n            <>\r\n              <span className=\"text-sm text-gray-600\">\r\n                Selection: {formatTime(selection.start)} - {formatTime(selection.end)}\r\n                ({formatTime(selection.end - selection.start)})\r\n              </span>\r\n              <button onClick={resetSelection} className=\"btn-outline\">\r\n                <RotateCcw className=\"h-4 w-4 mr-1\" />\r\n                Reset\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Instructions */}\r\n      <div className=\"bg-gray-50 rounded-lg p-4\">\r\n        <p className=\"text-sm text-gray-600\">\r\n          <strong>Instructions:</strong> Click on the waveform to set the start point, \r\n          then click again to set the end point for analysis. Select a segment of 10-30 seconds \r\n          for best results.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WaveformViewer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}