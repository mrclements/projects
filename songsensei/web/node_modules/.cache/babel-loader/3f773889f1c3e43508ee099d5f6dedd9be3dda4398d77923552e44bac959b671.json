{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zacha\\\\OneDrive\\\\Documents\\\\cline_workspace\\\\songsensei\\\\web\\\\src\\\\components\\\\YouTubeUrlInput.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YouTubeUrlInput = ({\n  onJobCreated,\n  onShowDisclaimer,\n  disabled\n}) => {\n  _s();\n  const [youtubeUrl, setYoutubeUrl] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async () => {\n    if (!youtubeUrl) return;\n    setLoading(true);\n    try {\n      const resp = await axios.post('/api/analysis/ingest', {\n        youtubeUrl,\n        userConsent: true\n      });\n      const {\n        jobId\n      } = resp.data;\n      onJobCreated(jobId);\n    } catch (err) {\n      console.error('Ingest error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"url\",\n      placeholder: \"https://www.youtube.com/watch?v=...\",\n      value: youtubeUrl,\n      onChange: e => setYoutubeUrl(e.target.value),\n      disabled: disabled || loading,\n      className: \"w-full input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      disabled: disabled || loading || !youtubeUrl,\n      className: \"btn-primary\",\n      children: loading ? 'Loading...' : 'Load & Extract Audio'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(YouTubeUrlInput, \"gJjoF6Q6gqVeu7wPqbzW//dlSb0=\");\n_c = YouTubeUrlInput;\nexport default YouTubeUrlInput;\nvar _c;\n$RefreshReg$(_c, \"YouTubeUrlInput\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","YouTubeUrlInput","onJobCreated","onShowDisclaimer","disabled","_s","youtubeUrl","setYoutubeUrl","loading","setLoading","handleSubmit","resp","post","userConsent","jobId","data","err","console","error","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/zacha/OneDrive/Documents/cline_workspace/songsensei/web/src/components/YouTubeUrlInput.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\ninterface YouTubeUrlInputProps {\r\n  onJobCreated: (jobId: string) => void;\r\n  onShowDisclaimer: () => void;\r\n  disabled?: boolean;\r\n}\r\n\r\nconst YouTubeUrlInput: React.FC<YouTubeUrlInputProps> = ({ onJobCreated, onShowDisclaimer, disabled }) => {\r\n  const [youtubeUrl, setYoutubeUrl] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = async () => {\r\n    if (!youtubeUrl) return;\r\n    setLoading(true);\r\n    try {\r\n      const resp = await axios.post<{ jobId: string }>('/api/analysis/ingest', {\r\n        youtubeUrl,\r\n        userConsent: true,\r\n      });\r\n      const { jobId } = resp.data;\r\n      onJobCreated(jobId);\r\n    } catch (err) {\r\n      console.error('Ingest error:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-2\">\r\n      <input\r\n        type=\"url\"\r\n        placeholder=\"https://www.youtube.com/watch?v=...\"\r\n        value={youtubeUrl}\r\n        onChange={(e) => setYoutubeUrl(e.target.value)}\r\n        disabled={disabled || loading}\r\n        className=\"w-full input\"\r\n      />\r\n      <button\r\n        onClick={handleSubmit}\r\n        disabled={disabled || loading || !youtubeUrl}\r\n        className=\"btn-primary\"\r\n      >\r\n        {loading ? 'Loading...' : 'Load & Extract Audio'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default YouTubeUrlInput;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ1B,MAAMC,eAA+C,GAAGA,CAAC;EAAEC,YAAY;EAAEC,gBAAgB;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACxG,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMa,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACJ,UAAU,EAAE;IACjBG,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAME,IAAI,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAoB,sBAAsB,EAAE;QACvEN,UAAU;QACVO,WAAW,EAAE;MACf,CAAC,CAAC;MACF,MAAM;QAAEC;MAAM,CAAC,GAAGH,IAAI,CAACI,IAAI;MAC3Bb,YAAY,CAACY,KAAK,CAAC;IACrB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,eAAe,EAAEF,GAAG,CAAC;IACrC,CAAC,SAAS;MACRP,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACET,OAAA;IAAKmB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBpB,OAAA;MACEqB,IAAI,EAAC,KAAK;MACVC,WAAW,EAAC,qCAAqC;MACjDC,KAAK,EAAEjB,UAAW;MAClBkB,QAAQ,EAAGC,CAAC,IAAKlB,aAAa,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC/CnB,QAAQ,EAAEA,QAAQ,IAAII,OAAQ;MAC9BW,SAAS,EAAC;IAAc;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACF9B,OAAA;MACE+B,OAAO,EAAErB,YAAa;MACtBN,QAAQ,EAAEA,QAAQ,IAAII,OAAO,IAAI,CAACF,UAAW;MAC7Ca,SAAS,EAAC,aAAa;MAAAC,QAAA,EAEtBZ,OAAO,GAAG,YAAY,GAAG;IAAsB;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACzB,EAAA,CAxCIJ,eAA+C;AAAA+B,EAAA,GAA/C/B,eAA+C;AA0CrD,eAAeA,eAAe;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}